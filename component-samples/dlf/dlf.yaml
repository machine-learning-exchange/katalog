# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A pipeline for dfl", "inputs":
      [{"default": "create", "name": "action", "optional": true}, {"default": "apiVersion:
      com.ie.ibm.hpsys/v1alpha1\nkind: Dataset\nmetadata:\n  name: example-dataset\n  namespace:
      default\nspec:\n  format: application/x-tar\n  type: ARCHIVE\n  url: https://dax-cdn.cdn.appdomain.cloud/dax-noaa-weather-data-jfk-airport/1.1.4/noaa-weather-data-jfk-airport.tar.gz\n",
      "name": "dataset_yaml", "optional": true}], "name": "dlf"}'
    sidecar.istio.io/inject: 'false'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"dataset-lifecycle-framework": [["Dataset-status",
      "$(results.dataset-status.path)"]]}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/output_artifacts: '{"dataset-lifecycle-framework": [{"key": "artifacts/$PIPELINERUN/dataset-lifecycle-framework/Dataset-status.tgz",
      "name": "dataset-lifecycle-framework-Dataset-status", "path": "/tmp/outputs/Dataset_status/data"}]}'
  name: dlf
spec:
  params:
  - name: action
    value: create
  - name: dataset_yaml
    value: "apiVersion: com.ie.ibm.hpsys/v1alpha1\nkind: Dataset\nmetadata:\n  name:\
      \ example-dataset\n  namespace: default\nspec:\n  format: application/x-tar\n\
      \  type: ARCHIVE\n  url: https://dax-cdn.cdn.appdomain.cloud/dax-noaa-weather-data-jfk-airport/1.1.4/noaa-weather-data-jfk-airport.tar.gz\n"
  pipelineSpec:
    params:
    - default: create
      name: action
    - default: "apiVersion: com.ie.ibm.hpsys/v1alpha1\nkind: Dataset\nmetadata:\n\
        \  name: example-dataset\n  namespace: default\nspec:\n  format: application/x-tar\n\
        \  type: ARCHIVE\n  url: https://dax-cdn.cdn.appdomain.cloud/dax-noaa-weather-data-jfk-airport/1.1.4/noaa-weather-data-jfk-airport.tar.gz\n"
      name: dataset_yaml
    tasks:
    - name: dataset-lifecycle-framework
      params:
      - name: action
        value: $(params.action)
      - name: dataset_yaml
        value: $(params.dataset_yaml)
      taskSpec:
        metadata:
          annotations:
            pipelines.kubeflow.org/component_spec: '{"description": "Manage Dataset
              Lifecycle Framework datasets", "implementation": {"container": {"args":
              ["-u", "dataset_manager.py", "--action", {"inputValue": "Action"}, "--output-path",
              {"outputPath": "Dataset status"}, "--dataset_yaml", {"inputValue": "Dataset
              YAML"}], "command": ["python"], "image": "tomcli/dlf:latest"}}, "inputs":
              [{"default": "create", "description": "Action to execute on KFServing",
              "name": "Action", "type": "String"}, {"default": "{}", "description":
              "Raw Dataset serialized YAML for deployment", "name": "Dataset YAML",
              "type": "String"}], "name": "Dataset Lifecycle Framework", "outputs":
              [{"description": "Dataset Status", "name": "Dataset status", "type":
              "String"}]}'
        params:
        - name: action
        - name: dataset_yaml
        results:
        - description: /tmp/outputs/Dataset_status/data
          name: dataset-status
        steps:
        - args:
          - -u
          - dataset_manager.py
          - --action
          - $(inputs.params.action)
          - --output-path
          - $(results.dataset-status.path)
          - --dataset_yaml
          - $(inputs.params.dataset_yaml)
          command:
          - python
          image: tomcli/dlf:latest
          imagePullPolicy: Always
          name: main
