# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: 'Model Robustness Check'
description: |
  Perform a robustness check using fast gradient attack with ART to make sure the model is robust against simple gradient changes.
metadata:
  annotations: {platform: 'OpenSource'}
inputs:
  - {name: model_id,                     description: 'Required. Training model ID', default: 'training-dummy'}
  - {name: epsilon,                      description: 'Required. Epsilon value for the FGSM attack'}
  - {name: model_class_file,             description: 'Required. pytorch model class file'}
  - {name: model_class_name,             description: 'Required. pytorch model class name', default: 'model'}
  - {name: feature_testset_path,         description: 'Required. Feature test dataset path in the data bucket'}
  - {name: label_testset_path,           description: 'Required. Label test dataset path in the data bucket'}
  - {name: loss_fn,                      description: 'Required. PyTorch model loss function'}
  - {name: optimizer,                    description: 'Required. pytorch model optimizer'}
  - {name: clip_values,                  description: 'Required. pytorch model clip_values allowed for features (min, max)'}
  - {name: nb_classes,                   description: 'Required. The number of classes of the model'}
  - {name: input_shape,                  description: 'Required. The shape of one input instance for the pytorch model'}
  - {name: data_bucket_name,             description: 'Bucket that has the processed data',  default: 'training-data'}
  - {name: result_bucket_name,           description: 'Bucket that has the training results', default: 'training-result'}
outputs:
  - {name: metric_path,                  description: 'Path for robustness check output'}
  - {name: robust_status,                description: 'Path for robustness status output'}
implementation:
  container:
    image: aipipeline/robustness-checker:pytorch
    command: ['python']
    args: [
      -u, robustness_check.py,
      --model_id, {inputValue: model_id},
      --model_class_file, {inputValue: model_class_file},
      --model_class_name, {inputValue: model_class_name},
      --feature_testset_path, {inputValue: feature_testset_path},
      --label_testset_path, {inputValue: label_testset_path},
      --epsilon, {inputValue: epsilon},
      --loss_fn, {inputValue: loss_fn},
      --optimizer, {inputValue: optimizer},
      --clip_values, {inputValue: clip_values},
      --nb_classes, {inputValue: nb_classes},
      --input_shape, {inputValue: input_shape},
      --metric_path, {outputPath: metric_path},
      --robust_status, {outputPath: robust_status},
      --data_bucket_name, {inputValue: data_bucket_name},
      --result_bucket_name, {inputValue: result_bucket_name}
    ]
