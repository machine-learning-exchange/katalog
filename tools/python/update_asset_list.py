#!/usr/bin/env python3

# Copyright 2021 The MLX Contributors
#
# SPDX-License-Identifier: Apache-2.0

from __future__ import print_function

from glob import glob
from os.path import abspath, dirname, relpath
import yaml


asset_types = [
    "component",
    "dataset",
    "model",
    "notebook",
    "pipeline",
]

script_path = abspath(dirname(__file__))
project_dir = dirname(script_path)

katalog_dir = f"{project_dir}/../"
KATALOG_URL = "https://raw.githubusercontent.com/machine-learning-exchange/katalog/main/"


def get_list_of_yaml_files_in_katalog(asset_type: str) -> list[str]:

    yaml_files = glob(f"{katalog_dir}/{asset_type}-samples/**/*.yaml", recursive=True)

    yaml_files = [filepath for filepath in yaml_files
                  if not any(word in filepath for word in ["template", "test", "src"])]

    return sorted(yaml_files)


def generate_katalog_dict() -> dict:

    katalog_dict = dict()

    for asset_type in asset_types:

        yaml_files = get_list_of_yaml_files_in_katalog(asset_type)
        katalog_asset_list = []

        for yaml_file in yaml_files:

            with open(yaml_file) as f:
                yaml_dict = yaml.load(f, Loader=yaml.FullLoader)
                asset_name = yaml_dict.get("name") or yaml_dict.get("metadata", {})\
                    .get("name", "").replace("-", " ").title() or ""
                asset_url = KATALOG_URL + relpath(yaml_file, katalog_dir)

            katalog_asset_item = {
                "name": asset_name,
                "url": asset_url
            }

            katalog_asset_list.append(katalog_asset_item)

        katalog_dict[asset_type + "s"] = katalog_asset_list

    return katalog_dict


def generate_katalog_md() -> None:

    katalog_dict = generate_katalog_dict()
    md = []
    md.append(
        "<!-- Do not edit. This file was generated by ./tools/python/update_asset_list.py "
        "(make update_asset_list) -->\n"
        "\n"
        "# MLX Katalog\n"
        "\n"
        "MLX _Katalog_ is a project to hold the default content to bootstrap the "
        "_Machine Learning Exchange_."
        "\n"
        "# List of Default Catalog Assets\n"
    )

    for key in katalog_dict.keys():
        md.append("## " + key.capitalize())
        for item in katalog_dict[key]:
            content = "[" + item['name'] + "](" + item['url'] + ")"
            md.append("* " + content)
    f = open("README.md", "w")
    f.write("\n".join(md))
    f.close()


if __name__ == '__main__':

    print("Regenerating Katalog asset list.\n")

    generate_katalog_md()
